{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/my-app/src/Components/Tasks.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"Doctors Appointment\",\n    day: \"Feb 5th at 2:30pm\",\n    reminder: true\n  }, {\n    id: 2,\n    text: \"Meeting at School\",\n    day: \"Feb 6th at 1:30pm\",\n    reminder: true\n  }, {\n    id: 3,\n    text: \"Food Shopping\",\n    day: \"Feb 5th at 2:30pm\",\n    reminder: false\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tasks.map(task => {\n      /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.text\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(Tasks, \"vJoCWmxtq5bD0mRHzc6Q24JCLhg=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useState","React","jsxDEV","_jsxDEV","Fragment","_Fragment","Tasks","_s","tasks","setTasks","id","text","day","reminder","children","map","task","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/my-app/src/Components/Tasks.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport React from \"react\";\n\nconst Tasks = () => {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Doctors Appointment\",\n      day: \"Feb 5th at 2:30pm\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"Meeting at School\",\n      day: \"Feb 6th at 1:30pm\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"Food Shopping\",\n      day: \"Feb 5th at 2:30pm\",\n      reminder: false,\n    },\n  ]);\n\n  return (\n    <>\n      {tasks.map((task) => {\n        <h3 key={task.id}>{task.text}</h3>;\n      })}\n    </>\n  );\n};\n\nexport default Tasks;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CACjC;IACEU,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,qBAAqB;IAC3BC,GAAG,EAAE,mBAAmB;IACxBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,mBAAmB;IACzBC,GAAG,EAAE,mBAAmB;IACxBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,eAAe;IACrBC,GAAG,EAAE,mBAAmB;IACxBC,QAAQ,EAAE;EACZ,CAAC,CACF,CAAC;EAEF,oBACEV,OAAA,CAAAE,SAAA;IAAAS,QAAA,EACGN,KAAK,CAACO,GAAG,CAAEC,IAAI,IAAK;MACnB,aAAAb,OAAA;QAAAW,QAAA,EAAmBE,IAAI,CAACL;MAAI,GAAnBK,IAAI,CAACN,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAkB;IACpC,CAAC;EAAC,iBACD;AAEP,CAAC;AAACb,EAAA,CA7BID,KAAK;AAAAe,EAAA,GAALf,KAAK;AA+BX,eAAeA,KAAK;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}